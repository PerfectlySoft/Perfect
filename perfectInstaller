#!/bin/sh

# Defaults
SWIFT_END_POINT="https://swift.org/builds/ubuntu1510/swift-2.2-SNAPSHOT-2016-01-11-a/"
SWIFT_VERSION="swift-2.2-SNAPSHOT-2016-01-11-a-ubuntu15.10"
SWIFT_SNAPSHOT_LOCATION="${HOME}/Swift_Snapshots"
SWIFT_LOCAL_LOCATION=${SWIFT_SNAPSHOT_LOCATION}/${SWIFT_VERSION}

# swift and PerfectLib dependencies
echo "Installing Dependencies..."
sudo apt-get -y install clang libicu-dev
sudo apt-get -y install clang libssl-dev
sudo apt-get -y install clang libevent-dev
sudo apt-get -y install clang libsqlite3-dev

# STARTING DOWNLOAD BLOCK
if [ ! -d ${SWIFT_SNAPSHOT_LOCATION} ]; then 
# creating needed folders for download
mkdir -p ${SWIFT_SNAPSHOT_LOCATION}

# download and verify swift
echo "Downloading Swift..."
wget ${SWIFT_END_POINT}/${SWIFT_VERSION}.tar.gz -P ${SWIFT_SNAPSHOT_LOCATION}
wget ${SWIFT_END_POINT}/${SWIFT_VERSION}.tar.gz.sig -P ${SWIFT_SNAPSHOT_LOCATION}
wget -q -O - https://swift.org/keys/all-keys.asc | gpg --import -

echo "Verifying Swift..."
gpg --keyserver hkp://pool.sks-keyservers.net --refresh-keys Swift
gpg --verify ${SWIFT_LOCAL_LOCATION}.tar.gz.sig

# TODO: Abort if previous step fails

# Extracting and linking swift 
echo "Extracting and Linking swift..."
tar xzf ${SWIFT_LOCAL_LOCATION}.tar.gz -C ${SWIFT_SNAPSHOT_LOCATION}

fi #ENDING DOWNLOAD BLOCK

# building PerfectLib
echo "Building PerfectLib..."
cd PerfectLib
make clean
make 
sudo make install

# cleaning up
sudo rm -fr tmp
# building PerfectServer
echo "Building PerfectServer..."
cd ../PerfectServer
make clean
make
sudo make install

mkdir -p ${HOME}/SwiftServer/PerfectLibraries

echo "***************************************************"
echo "If failed with 'make: swift: Command not found' please add:"
echo "export PATH=\$PATH:${SWIFT_LOCAL_LOCATION}/usr/bin"
echo "to your ~/.bash_profile and then run source ~/.bash_profile"
echo "-----------------------or-------------------------"
echo "create and add to /etc/profile.d/swift_vars.sh and reboot"
echo "-----------------------or-------------------------"
echo "add to /etc/environment and reboot"
echo "***************************************************"

